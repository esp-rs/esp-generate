[package]
#REPLACE project-name project-name
name = "project-name"
version = "0.1.0"
edition = "2021"

[[bin]]
#REPLACE project-name project-name
name = "project-name"
path = "./src/bin/main.rs"
#IF option("embedded-test")
test = false

[[test]]
name    = "hello_test"
harness = false

[lib]
test = false
#ENDIF

[dependencies]
esp-hal = { version = "1.0.0-beta.0", features = [
    #REPLACE esp32c6 mcu
    "esp32c6",
    #IF option("unstable-hal")
    "unstable",
    #ENDIF
    #IF option("defmt")
    #+"defmt",
    #ENDIF
] }
#IF option("defmt")
#+defmt = "0.3.10"
#ELIF option("log")
log = { version = "0.4.21" }
#ENDIF
#IF option("log-frontend") || option("panic-handler")
#IF option("probe-rs")
#IF option("defmt")
rtt-target = { version = "0.6.1", features = [ "defmt" ] }
#ELSE
#+rtt-target = "0.6.1"
#ENDIF defmt
#ELSE probe-rs
esp-println = { version = "0.13.0", features = [
    #REPLACE esp32c6 mcu
    "esp32c6",
    #IF option("defmt")
    #+"defmt-espflash",
    #ENDIF
    #IF option("log")
    "log",
    #ENDIF
] }
#ENDIF probe-rs
#ENDIF log-frontend || panic-handler
#IF option("esp-backtrace")
esp-backtrace = { version = "0.15.1", features = [
    #REPLACE esp32c6 mcu
    "esp32c6",
    "exception-handler",
    "panic-handler",
    #IF option("defmt")
    #+"defmt",
    #ELSE
    "println",
    #ENDIF
]}
#ELIF option("panic-rtt-target")
#IF option("defmt")
panic-rtt-target = { version = "0.2.0", features = ["defmt"] }
#ELSE
#+panic-rtt-target = "0.2.0"
#ENDIF defmt
#ENDIF
#IF option("alloc")
esp-alloc = "0.7.0"
#ENDIF
#IF option("wifi") || option("ble")
embedded-io = "0.6.1"
#IF option("embassy")
embedded-io-async = "0.6.1"
#ENDIF embassy
#IF option("wifi")
embassy-net = { version = "0.6.0", features = [ "tcp", "udp", "dhcpv4", "medium-ethernet"] }
smoltcp = { version = "0.12.0", default-features = false, features = [
    "medium-ethernet",
    "multicast",
    "proto-dhcpv4",
    "proto-dns",
    "proto-ipv4",
    "socket-dns",
    "socket-raw",
    "socket-tcp",
    "socket-udp",
    "socket-icmp",
] }
#ENDIF wifi
#IF option("embassy") && option("wifi")
# for more networking protocol support see https://crates.io/crates/edge-net
#ENDIF embassy && wifi
esp-wifi = { version = "0.13.0", features = [
    "builtin-scheduler",
    #REPLACE esp32c6 mcu
    "esp32c6",
    #IF option("wifi")
    "wifi",
    #ENDIF
    #IF option("ble")
    "ble",
    #ENDIF
    #IF option("wifi") && option("ble")
    "coex",
    #ENDIF
    "esp-alloc",
    #IF option("defmt")
    #+"defmt",
    #ELSE
    "log",
    #ENDIF
] }
heapless = { version = "0.8.0", default-features = false }
#IF option("ble")
#+bleps = { git = "https://github.com/bjoernQ/bleps", package = "bleps", rev = "a5148d8ae679e021b78f53fd33afb8bb35d0b62e", features = [ "macros", "async"] }
#ENDIF
#ENDIF wifi || ble
#IF option("embassy")
embassy-executor = { version = "0.7.0",  features = [
    "task-arena-size-20480",
    #IF option("defmt")
    #+"defmt"
    #ENDIF
] }
embassy-time     = "0.4.0"
#REPLACE esp32c6 mcu
esp-hal-embassy  = { version = "0.7.0",  features = ["esp32c6"] }
static_cell      = { version = "2.1.0",  features = ["nightly"] }
#ENDIF
critical-section = "1.2.0"

#IF option("embedded-test")
[dev-dependencies]
embedded-test = { version = "0.6.0", features = [
    #IF option("xtensa")
    "xtensa-semihosting",
    #ENDIF xtensa
    #IF option("embassy")
    "embassy",
    "external-executor",
    #ENDIF defmt
    #IF option("defmt")
    "defmt",
    #ENDIF defmt
] }
#ENDIF

[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units = 1        # LLVM can perform better optimizations using a single thread
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 's'
overflow-checks = false
